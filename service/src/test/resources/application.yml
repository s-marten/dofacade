photoService: mock

server:
  port: 0

licenseUrl: classpath:license.xml

eureka:
  client:
    enabled: false

security: 
  enabled: false
#  oauth2: 
#    client: 
#      clientId: client
#      clientSecret: secret 
#      scope: openid
#      accessTokenUri: http://localhost:8500/uaa/oauth/token
#      userAuthorizationUri: http://localhost:8500/uaa/oauth/authorize
#    resource: 
#      jwt: 
#        key-uri: http://localhost:8500/uaa/oauth/token_key
#

spring:
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    username: sa
    password:     
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
      naming: 
        physical-strategy: ru.diasoft.micro.config.H2PhysicalNamingStrategy
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  liquibase:
    change-log: classpath*:liquibase-extracted/rootChangeLog.xml
  messages:
    basename: i18n.messages
# Generate Events Publisher or Subsriber   
#  kafka:
#    bootstrap-servers: localhost:9094   
#  cloud:
#    stream:
#      binders:
#        binderName:
#          type: kafka
#      bindings:
#        eventHelloPublish:
#          destination: event-hello
#        eventHelloSubscribe:
#          destination: event-hello  
logging:
  config: classpath:log4j2.xml
  level:
    ROOT: INFO
    ru.diasoft.micro: DEBUG
    org.hibernate.type: INFO         